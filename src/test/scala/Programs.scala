import chisel3._
import chisel3.util._
import chisel3.iotesters
import chisel3.iotesters.PeekPokeTester
import java.util

object Programs{

  val instructions = Array(
    "b00010000001000000000000000000000".U(32.W), // LI R1, 0
    "b00010000010000000000000000000000".U(32.W), // LI R2, 0
    "b00010001010000000000001100100000".U(32.W), // LI R10, 400
    "b00100000001000000000000000010100".U(32.W), // JEQ R1, 20, END_X_LOOP
    "b00010000010000000000000000000000".U(32.W), // LI R2, 0
    "b00100000010000000000000000010100".U(32.W), // JEQ R2, 20, END_Y_LOOP
    "b00000100101000010000000000010100".U(32.W), // ADDI R5, R1, 20
    "b00000100101001010000000000000010".U(32.W), // ADDI R5, R5, R2
    "b00100000001000000000000000000000".U(32.W), // JEQ R1, 0, SET_ZERO
    "b00100000010000000000000000000000".U(32.W), // JEQ R2, 0, SET_ZERO
    "b00010000011000000000000000010011".U(32.W), // LI R3, 19
    "b00100000001000110000000000000000".U(32.W), // JEQ R1, R3, SET_ZERO
    "b00100000010000110000000000000000".U(32.W), // JEQ R2, R3, SET_ZERO
    "b00010100011001010000000000000000".U(32.W), // LD R3, MEM[R5]
    "b00100000011000000000000000000000".U(32.W), // JEQ R3, 0, SET_ZERO
    "b00001000110001010000000000010100".U(32.W), // SUBI R6, R5, 20
    "b00010100100001100000000000000000".U(32.W), // LD R4, MEM[R6]
    "b00100000100000000000000000000000".U(32.W), // JEQ R4, 0, SET_ZERO
    "b00000100110001010000000000010100".U(32.W), // ADDI R6, R5, 20
    "b00010100100001100000000000000000".U(32.W), // LD R4, MEM[R6]
    "b00100000100000000000000000000000".U(32.W), // JEQ R4, 0, SET_ZERO
    "b00001000110001010000000000000001".U(32.W), // SUBI R6, R5, 1
    "b00010100100001100000000000000000".U(32.W), // LD R4, MEM[R6]
    "b00100000100000000000000000000000".U(32.W), // JEQ R4, 0, SET_ZERO
    "b00000100110001010000000000000001".U(32.W), // ADDI R6, R5, 1
    "b00010100100001100000000000000000".U(32.W), // LD R4, MEM[R6]
    "b00100000100000000000000000000000".U(32.W), // JEQ R4, 0, SET_ZERO
    "b00010000011000000000001111111111".U(32.W), // LI R3, 255
    "b00000100110001010000001100100000".U(32.W), // ADDI R6, R5, 400
    "b00011000011001100000000000000000".U(32.W), // ST R3, MEM[R6]
    "b00011100000000000000000000000000".U(32.W), // JMP CONTINUE
    "b00010000011000000000000000000000".U(32.W), // LI R3, 0
    "b00000100110001010000001100100000".U(32.W), // ADDI R6, R5, 400
    "b00011000011001100000000000000000".U(32.W), // ST R3, MEM[R6]
    "b00000100010000010000000000000001".U(32.W), // ADDI R2, R2, 1
    "b00011100000000000000000000000000".U(32.W), // JMP LOOP_Y
    "b00000100001000010000000000000001".U(32.W), // ADDI R1, R1, 1
    "b00011100000000000000000000000000".U(32.W), // JMP LOOP_X
    "b00100100000000000000000000000000".U(32.W)  // END
  )

}